{"ast":null,"code":"var _jsxFileName = \"/Users/saba/Desktop/VM/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pinataApiKey = '192e364f981f4f05145c';\nconst pinataSecretKey = 'a87894043530d8c1dd39e3480b8962cd7f5d85070d50a8726e3c5350ac757358';\nasync function uploadFileToPinata(file) {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const response = await axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {\n      headers: {\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretKey,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    if (response.status === 200) {\n      const {\n        IpfsHash\n      } = response.data;\n      console.log('File uploaded successfully! IPFS Hash:', IpfsHash);\n      return IpfsHash;\n    } else {\n      console.error('Error uploading file:', response.statusText);\n      throw new Error('Error uploading file');\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n}\nfunction App() {\n  _s();\n  // create web3 object useeffect\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    web3: null\n  });\n  const providerChanged = provider => {\n    provider.on(\"chainChanged\", _ => window.location.reload());\n    provider.on(\"accountsChanged\", _ => window.location.reload());\n  };\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectEthereumProvider();\n      if (provider) {\n        providerChanged(provider);\n        setWeb3Api({\n          provider,\n          web3: new Web3(provider)\n        });\n      } else {\n        console.log(\"Please Sign To Metamask Wallet\");\n      }\n    };\n    loadProvider();\n  }, []);\n\n  // connect with contract\n\n  const [contract, setContract] = useState(null);\n  useEffect(() => {\n    const loadContract = async () => {\n      const contractFile = await fetch('/abis/cloud.json');\n      const convertFileToJson = await contractFile.json();\n      const networkId = await web3Api.web3.eth.net.getId();\n      const netWorkData = convertFileToJson.networks[networkId];\n      if (netWorkData) {\n        const abi = convertFileToJson.abi;\n        const address = convertFileToJson.networks[networkId].address;\n        const contract = await new web3Api.web3.eth.Contract(abi, address);\n        setContract(contract);\n      } else {\n        window.alert(\"Our App Connect Only To Ganache Network!!\");\n      }\n    };\n    web3Api.web3 && loadContract();\n  }, [web3Api.web3]);\n\n  //create setter and getter for the account address\n\n  const [account, setAccount] = useState(null);\n  useEffect(() => {\n    const getAccount = async () => {\n      const accounts = await web3Api.web3.eth.getAccounts();\n      setAccount(accounts[0]);\n      console.log(accounts[0]);\n    };\n    web3Api.web3 && getAccount();\n  }, [web3Api.web3]);\n  const [urlFile, setUrlFile] = useState('');\n  const onChange = async e => {\n    const file = e.target.files[0];\n    try {\n      const addFile = await uploadFileToPinata(file);\n      setUrlFile(addFile);\n      // console(addFile);\n\n      console.log(`https://ipfs.io/ipfs/${addFile}`);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n\n  // get and set the data to the blockchain\n  const [cloudData, setClouddata] = useState(\"\");\n  useEffect(() => {\n    const loadData = async () => {\n      const responseData = await contract.methods.getData().call();\n      const hash = responseData.startsWith('https://ipfs.io/ipfs/') ? responseData.substring(24) : responseData;\n      setClouddata(hash);\n      console.log(\"Contract is:\", contract);\n    };\n    if (contract) /*(typeof web3Api.web3 !== 'undefined' && typeof contract !== 'undefined' && contract !== null && typeof account !== 'undefined') */{\n        loadData();\n      }\n  }, [contract]);\n  useEffect(() => {\n    const savedata = async () => {\n      await contract.methods.saveData(urlFile).send({\n        from: account\n      });\n      window.location.reload();\n    };\n    if (typeof web3Api.web3 !== 'undefined' && typeof contract !== 'undefined' && contract !== null && typeof account !== 'undefined') {\n      savedata();\n    }\n  }, [urlFile]);\n  const [showCloudData, setShowCloudData] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: \"IPFS Uploader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fromFile\",\n            className: \"form-label\",\n            children: \" Upload File  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 84\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"your Account Is:\", account]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Blockchain saved voice Fingerprint Is: \", cloudData]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), urlFile ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"The Selected File URL Is: \", urlFile]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select File To See The IPFS URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 71\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"upload\",\n            type: \"file\",\n            id: \"formFile\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), urlFile && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cloudData,\n        alt: \"Uploaded File\",\n        width: 400,\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dnnKG0HTmbun8BjQhCz14S4leTo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","detectEthereumProvider","Web3","jsxDEV","_jsxDEV","pinataApiKey","pinataSecretKey","uploadFileToPinata","file","formData","FormData","append","response","post","headers","pinata_api_key","pinata_secret_api_key","status","IpfsHash","data","console","log","error","statusText","Error","App","_s","web3Api","setWeb3Api","provider","web3","providerChanged","on","_","window","location","reload","loadProvider","contract","setContract","loadContract","contractFile","fetch","convertFileToJson","json","networkId","eth","net","getId","netWorkData","networks","abi","address","Contract","alert","account","setAccount","getAccount","accounts","getAccounts","urlFile","setUrlFile","onChange","e","target","files","addFile","cloudData","setClouddata","loadData","responseData","methods","getData","call","hash","startsWith","substring","savedata","saveData","send","from","showCloudData","setShowCloudData","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","src","alt","width","height","_c","$RefreshReg$"],"sources":["/Users/saba/Desktop/VM/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\n\n\nconst pinataApiKey = '192e364f981f4f05145c';\nconst pinataSecretKey = 'a87894043530d8c1dd39e3480b8962cd7f5d85070d50a8726e3c5350ac757358';\n\n\nasync function uploadFileToPinata(file) {\n  const formData = new FormData();\n  formData.append('file', file);\n\n  try {\n    const response = await axios.post(\n      'https://api.pinata.cloud/pinning/pinFileToIPFS',\n      formData,\n      {\n        headers: {\n          pinata_api_key: pinataApiKey,\n          pinata_secret_api_key: pinataSecretKey,\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    );\n\n    if (response.status === 200) {\n      const { IpfsHash } = response.data;\n      console.log('File uploaded successfully! IPFS Hash:', IpfsHash);\n      return IpfsHash;\n    } else {\n      console.error('Error uploading file:', response.statusText);\n      throw new Error('Error uploading file');\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n}\n\nfunction App() {\n  // create web3 object useeffect\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    web3: null,\n  })\n\n  const providerChanged = (provider) => {\n    provider.on(\"chainChanged\", _ => window.location.reload());\n    provider.on(\"accountsChanged\", _ => window.location.reload());\n\n  }\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectEthereumProvider();\n\n      if (provider) {\n        providerChanged(provider);\n        setWeb3Api({\n          provider,\n          web3: new Web3(provider)\n        })\n      } else {\n        console.log(\"Please Sign To Metamask Wallet\")\n      }\n    }\n\n    loadProvider()\n  }, [])\n\n\n  // connect with contract\n\n  const [contract, setContract] = useState(null);\n\n  useEffect(() => {\n    const loadContract = async () => {\n      const contractFile = await fetch('/abis/cloud.json');\n      const convertFileToJson = await contractFile.json();\n      const networkId = await web3Api.web3.eth.net.getId();\n\n      const netWorkData = convertFileToJson.networks[networkId];\n\n      if (netWorkData) {\n        const abi = convertFileToJson.abi;\n        const address = convertFileToJson.networks[networkId].address;\n        const contract = await new web3Api.web3.eth.Contract(abi, address);\n        setContract(contract)\n\n\n      } else {\n        window.alert(\"Our App Connect Only To Ganache Network!!\")\n      }\n\n\n    }\n    web3Api.web3 && loadContract();\n  }, [web3Api.web3])\n\n  //create setter and getter for the account address\n\n  const [account, setAccount] = useState(null);\n\n  useEffect(() => {\n    const getAccount = async () => {\n      const accounts = await web3Api.web3.eth.getAccounts();\n      setAccount(accounts[0]);\n      console.log(accounts[0]);\n    }\n    web3Api.web3 && getAccount();\n\n  }, [web3Api.web3])\n\n\n\n  const [urlFile, setUrlFile] = useState('');\n\n  const onChange = async (e) => {\n    const file = e.target.files[0];\n\n    try {\n      const addFile = await uploadFileToPinata(file);\n      setUrlFile(addFile);\n      // console(addFile);\n\n      console.log(`https://ipfs.io/ipfs/${addFile}`);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  }\n\n  // get and set the data to the blockchain\n  const [cloudData, setClouddata] = useState(\"\");\n\n  useEffect(() => {\n    const loadData = async () => {\n\n      const responseData = await contract.methods.getData().call();\n      const hash = responseData.startsWith('https://ipfs.io/ipfs/') ? responseData.substring(24) : responseData;\n      setClouddata(hash);\n\n      console.log(\"Contract is:\", contract)\n    }\n    if (contract)/*(typeof web3Api.web3 !== 'undefined' && typeof contract !== 'undefined' && contract !== null && typeof account !== 'undefined') */ {\n      loadData();\n    }\n  }, [contract])\n\n  useEffect(() => {\n    const savedata = async () => {\n      await contract.methods.saveData(urlFile).send({\n        from: account\n      })\n\n      window.location.reload()\n    }\n    if (typeof web3Api.web3 !== 'undefined' && typeof contract !== 'undefined' && contract !== null && typeof account !== 'undefined') {\n      savedata();\n    }\n  }, [urlFile])\n\n\n  const [showCloudData, setShowCloudData] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"alert alert-danger\" role=\"alert\">\n          IPFS Uploader\n        </div>\n\n        <div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"fromFile\" className=\"form-label\"> Upload File  </label><br></br>\n            <p>your Account Is:{account}</p>\n            <p>Blockchain saved voice Fingerprint Is: {cloudData}</p>\n\n            {\n               urlFile ? <p>The Selected File URL Is: {urlFile}</p> : <p>Select File To See The IPFS URL</p>\n\n            }\n\n            <input className=\"upload\" type=\"file\" id=\"formFile\" onChange={onChange} /> \n\n            {/* <div>\n              <br></br>\n            <button className=\"showhash\" onClick={() => setShowCloudData(true)}>Show Blockchain Hash</button>\n            {showCloudData && <p>Blockchain Data Is: {cloudData}</p>}\n            {showCloudData && <button className=\"showhash\"  onClick={() => setShowCloudData(false)}>Hide Blockchain Hash</button>}\n            </div> */}\n\n          </div>\n        </div>\n\n        {urlFile && <img src={cloudData} alt=\"Uploaded File\" width={400} height={300} />}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}